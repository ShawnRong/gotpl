name: Build

on:
  push:
    branches:
    - master

    tags:
    - '*'

  pull_request:

jobs:
  build-test-release-amd64:
    runs-on: ubuntu-latest
    container:
      image: golang:alpine
    env:
      GOOS: linux
      GOARCH: amd64
    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: apk add --update musl-dev gcc build-base bash
    - name: build
      run: make
    - name: test
      run: make test
    - name: prepare artifact
      if: startsWith(github.ref, 'refs/tags/')
      run: make package
    - name: Get the version
      if: startsWith(github.ref, 'refs/tags/')
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - uses: xresloader/upload-to-github-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: gotpl-*.tar.gz
        overwrite: true
        tags: true
        draft: false
        tag_name: ${{ steps.get_version.outputs.VERSION }}
  build-test-release-arm64:
    # run on arm64 to run arm64 golang image.
    runs-on: self-hosted
    defaults:
      run:
        working-directory: gotpl
    container:
      image: golang:alpine
    env:
      GOOS: linux
      GOARCH: arm64
    steps:
    - name: install dependencies
      run: apk add --update musl-dev gcc build-base bash git tar
# This doesn't work on arm64 self-hosted runners, have to checkout manually.
#    - uses: actions/checkout@v2
    - name: checkout
      run: git checkout ${GITHUB_SHA}
    - name: build
      run: make
    - name: test
      run: make test
    - name: prepare artifact
      if: startsWith(github.ref, 'refs/tags/')
      run: make package
    - name: Get the version
      if: startsWith(github.ref, 'refs/tags/')
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - uses: xresloader/upload-to-github-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: gotpl-*.tar.gz
        overwrite: true
        tags: true
        draft: false
        tag_name: ${{ steps.get_version.outputs.VERSION }}
