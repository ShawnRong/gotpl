name: Build

on:
  push:
    branches:
    - master

    tags:
    - '*'

  pull_request:

jobs:
  build-test-release-amd64:
    runs-on: ubuntu-latest
    container:
      image: golang:alpine
    env:
      GOOS: linux
      GOARCH: amd64
    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: apk add --update musl-dev gcc build-base bash
    - name: build
      run: make
    - name: test
      run: make test
    - name: prepare artifact
      if: startsWith(github.ref, 'refs/tags/')
      run: make package
    - name: Get the version
      if: startsWith(github.ref, 'refs/tags/')
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - uses: xresloader/upload-to-github-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: gotpl-*.tar.gz
        overwrite: true
        tags: true
        draft: false
        tag_name: ${{ steps.get_version.outputs.VERSION }}
  build-test-release-arm64:
    # run on arm64 to run arm64 golang image.
    runs-on: self-hosted
    defaults:
      run:
        working-directory: gotpl
    container:
      image: golang:alpine
    env:
      GOOS: linux
      GOARCH: arm64
    steps:
    - name: install dependencies
      run: apk add --update musl-dev gcc build-base bash git tar curl
#### doesn't work on alpine:
####        Error: JavaScript Actions in Alpine containers are only supported on x64 Linux runners. Detected Linux Arm64
#    - uses: actions/checkout@master
    - name: checkout
      # @fixme hardcoded branch name, we can't fetch it from GITHUB_REF because it may be a tag,
      # in this case tag is probably not yet available locally and mast be pulled first.
      # we assume we always have a single branch.
      run: git checkout master && git pull && git checkout ${GITHUB_SHA}
    - name: build
      run: make
    - name: test
      run: make test
    - name: prepare artifact
      if: startsWith(github.ref, 'refs/tags/')
      run: make package
    - name: Get the version
      if: startsWith(github.ref, 'refs/tags/')
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: upload artifact
      run: |
        curl -v -i -X POST -H \
          "Content-Type:application/json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/wodby/gotpl/releases -d '{"tag_name":"${{ steps.get_version.outputs.VERSION }}","name": "${{ steps.get_version.outputs.VERSION }}","draft": false,"prerelease": false}'

        curl \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: $(file -b --mime-type gotpl-linux-arm64.tar.gz)" \
            --data-binary @gotpl-linux-arm64.tar.gz \
            "https://uploads.github.com/repos/wodby/gotpl/releases/${{ steps.get_version.outputs.VERSION }}/assets?name=$(basename gotpl-linux-arm64.tar.gz)"
#### doesn't work on alpine:
####        Error: JavaScript Actions in Alpine containers are only supported on x64 Linux runners. Detected Linux Arm64
####
#    - uses: xresloader/upload-to-github-release@v1
#      if: startsWith(github.ref, 'refs/tags/')
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        file: gotpl-*.tar.gz
#        overwrite: true
#        tags: true
#        draft: false
#        tag_name: ${{ steps.get_version.outputs.VERSION }}
